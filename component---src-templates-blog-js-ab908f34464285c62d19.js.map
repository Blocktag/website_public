{"version":3,"file":"component---src-templates-blog-js-ab908f34464285c62d19.js","mappings":"0NAqCA,MAlCiBA,IAAgB,IAAf,MAAEC,GAAOD,EACzB,OACEC,EACGC,QAAOC,GAA8C,iBAAtCA,EAAKC,KAAKC,YAAYC,cACrCC,KAAIC,IAAA,IAAGJ,KAAMD,GAAMK,EAAA,OAClBC,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,qCACbD,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAIT,EAAKU,OAAOC,KAAMC,IAAKZ,EAAKa,IACjEP,EAAAA,cAAA,OAAKC,UAAU,SAASO,IAAKd,EAAKE,YAAYa,MAAOC,IAAKhB,EAAKE,YAAYe,QAC3EX,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,0BAA0BP,EAAKE,YAAYe,OAC1DX,EAAAA,cAAA,KAAGC,UAAU,2BACVP,EAAKkB,UAGVZ,EAAAA,cAAA,OAAKC,UAAU,aACZP,EAAKE,YAAYiB,KAAKf,KAAIgB,GACzBd,EAAAA,cAAA,QAAMC,UAAU,sGAAqG,IAAEa,MAG3Hd,EAAAA,cAAA,OAAKC,UAAU,aAEbD,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,KAAGC,UAAU,8BAA6B,iBAC1CD,EAAAA,cAAA,KAAGC,UAAU,iBAAiBP,EAAKE,YAAYmB,UAKnD,GACN,E,WC1BR,MAAMC,EAAiBC,GAChBA,EAAMC,KAQPlB,EAAAA,cAAA,QAAMmB,UAAQ,EAAClB,UAAU,uEACtBgB,EAAMG,MAPTpB,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAE,SAAWc,EAAMI,IAAOpB,UAAU,qBACvCgB,EAAMG,MAUd,IAEoBE,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAkD1B,OAlD0BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC3BC,OAAA,WACE,MAAM,YAAEC,GAAgBC,KAAKb,OACvB,MAAEc,EAAK,MAAEC,EAAK,MAAEC,EAAK,KAAEC,GAASL,EAChCM,EAAcH,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGI,WACjDC,GAAWL,EAAQ,GAAGI,WAAa,IAEnCE,EAAyB,CAC7B,WAAY,oBACZ,QAAS,UACTjB,IAAKkB,IAAAA,QACLC,KAAMD,IAAAA,UACNE,cAAeF,IAAAA,aAAsBA,IAAAA,aAAsB,IAG7D,OACEvC,EAAAA,cAAC0C,EAAAA,EAAM,CAACC,kBAAgB,GACtB3C,EAAAA,cAAA,OAAKC,UAAU,0BACbD,EAAAA,cAAA,OAAKC,UAAU,0BACbD,EAAAA,cAAC4C,EAAAA,GAAM,KACL5C,EAAAA,cAAA,aAAO,iBAEPA,EAAAA,cAAA,UAAQ6C,KAAK,uBACVC,KAAKC,UAAUT,KAYpBtC,EAAAA,cAAA,WAASC,UAAU,6BACjBD,EAAAA,cAACgD,EAAQ,CAACxD,MAAOuC,KAGnB/B,EAAAA,cAAA,WAASC,UAAU,WACjBD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAACgB,EAAc,CAACE,KAAMe,EAAOZ,IAAKc,EAAaf,KAAK,kBACpDpB,EAAAA,cAACgB,EAAc,CAACE,KAAMgB,EAAMb,IAAKgB,EAASjB,KAAK,kBAQ7D,EAACE,CAAA,CAlD0B,CAAS2B,EAAAA,U","sources":["webpack://Blocktag/./src/components/PostCard/index.js","webpack://Blocktag/./src/templates/blog.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostCard = ({ posts }) => {\n  return (\n    posts\n      .filter(post => post.node.frontmatter.templateKey === 'article-page')\n      .map(({ node: post }) => (\n        <div className='w-1/3 p-4'>\n          <div className='shadow-lg rounded overflow-hidden'>\n            <Link className='has-text-primary' to={post.fields.slug} key={post.id}>\n              <img className='w-full' src={post.frontmatter.cover} alt={post.frontmatter.title} />\n              <div className='px-6 py-4'>\n                <div className='font-bold text-xl mb-2'>{post.frontmatter.title}</div>\n                <p className='text-gray-700 text-base'>\n                  {post.excerpt}\n                </p>\n              </div>\n              <div className='px-6 py-4'>\n                {post.frontmatter.tags.map(tag => (\n                  <span className='inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 last:mr-0'>#{tag}</span>\n                ))}\n              </div>\n              <div className='px-6 py-4'>\n                {/* <img className=\"w-10 h-10 rounded-full mr-4\" src=\"/img/jonathan.jpg\" alt=\"Avatar of Jonathan Reinink\" /> */}\n                <div className='text-sm'>\n                  <p className='text-gray-900 leading-none'>Blocktag Team</p>\n                  <p className='text-gray-600'>{post.frontmatter.date}</p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      ))\n  )\n}\n\nexport default PostCard\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport config from '../../config'\nimport Helmet from 'react-helmet'\nimport PostCard from '../components/PostCard'\nimport Layout from '../components/Layout'\n\nconst PaginationLink = props => {\n  if (!props.test) {\n    return (\n      <Link to={`/blog/${props.url}`} className='button is-rounded'>\n        {props.text}\n      </Link>\n    )\n  } else {\n    return (\n      <span disabled className='px-4 py-2 font-bold text-white rounded g-blue-500 hover:bg-blue-700'>\n        {props.text}\n      </span>\n    )\n  }\n}\n\nexport default class BlogPage extends Component {\n  render () {\n    const { pageContext } = this.props\n    const { group, index, first, last } = pageContext\n    const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\n    const nextUrl = (index + 1).toString() + '/'\n\n    const websiteSchemaOrgJSONLD = {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: config.siteTitle,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    }\n\n    return (\n      <Layout includePreFooter>\n        <div className='bg-white flex flex-col'>\n          <div className='container mx-auto px-8'>\n            <Helmet>\n              <title>Blocktag Blog</title>\n              {/* Schema.org tags */}\n              <script type='application/ld+json'>\n                {JSON.stringify(websiteSchemaOrgJSONLD)}\n              </script>\n            </Helmet>\n\n            {/* <main className=\"flex flex-wrap items-center text-center md:text-left my-6 py-24 lg:px-24\">\n              <div className=\"w-full md:w-full whitespace-pre-line\">\n                <h1 className=\"text-3xl text-black leading-tight mb-6\">\n                  Blog\n                </h1>\n              </div>\n            </main> */}\n\n            <section className='flex flex-wrap my-12 mb-4'>\n              <PostCard posts={group} />\n            </section>\n\n            <section className='section'>\n              <div className='buttons is-centered'>\n                <PaginationLink test={first} url={previousUrl} text='Previous Page' />\n                <PaginationLink test={last} url={nextUrl} text='Next Page' />\n              </div>\n            </section>\n\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n"],"names":["_ref","posts","filter","post","node","frontmatter","templateKey","map","_ref2","React","className","Link","to","fields","slug","key","id","src","cover","alt","title","excerpt","tags","tag","date","PaginationLink","props","test","disabled","text","url","BlogPage","_Component","apply","arguments","_inheritsLoose","prototype","render","pageContext","this","group","index","first","last","previousUrl","toString","nextUrl","websiteSchemaOrgJSONLD","config","name","alternateName","Layout","includePreFooter","Helmet","type","JSON","stringify","PostCard","Component"],"sourceRoot":""}